<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>es.ual.acg.cos.ws</groupId>
	<artifactId>cos</artifactId>
	<version>1.1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>COS1core</name>
	<description>COS web services using JAX-WS</description>

	<url>http://acg.ual.es</url>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.org.jboss.as.plugins.maven.plugin>8.1.0.Final</version.org.jboss.as.plugins.maven.plugin>
		<!--version.org.jboss.spec.jboss.javaee.6.0>3.0.0.Final</version.org.jboss.spec.jboss.javaee.6.0-->
		<version.org.jboss.spec.jboss.javaee.7.0>1.0.0.Final</version.org.jboss.spec.jboss.javaee.7.0>


		<!-- other plugin versions -->
		<!--version.compiler.plugin>2.3.1</version.compiler.plugin-->
		<version.compiler.plugin>3.0</version.compiler.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<!--maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source-->
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any 
				dependencies from org.jboss.spec will have their version defined by this 
				BOM -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
				the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
				any version of JBoss AS that implements Java EE 6, not just JBoss AS 7! -->
			<!--dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>${version.org.jboss.spec.jboss.javaee.6.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency-->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>${version.org.jboss.spec.jboss.javaee.7.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>



		<dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>3.2.6.RELEASE</version>
        </dependency>
        
        <dependency>
		   <groupId>org.apache.axis</groupId>
		   <artifactId>axis</artifactId>
		   <version>1.4</version>
  		</dependency>
  
		  <dependency>
		   <groupId>commons-discovery</groupId>
		   <artifactId>commons-discovery</artifactId>
		   <version>0.5</version>
		  </dependency>
  
		  <dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-frontend-jaxrs</artifactId>
		    <version>3.0.2</version>
		  </dependency>
		  
		  <dependency>
		   <groupId>org.apache.cxf</groupId>
		   <artifactId>cxf-rt-rs-service-description</artifactId>
		   <version>3.0.2</version>
		  </dependency>





		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<version>1.0.0.Final</version>
			<scope>provided</scope>
		</dependency>
		
		<!--dependency>
	        <groupId>org.jboss.spec.javax.ws.rs</groupId>
	        <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
	        <scope>provided</scope>
	    </dependency-->

		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0</version>
		</dependency>

		<!--dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
		</dependency-->
		
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<!--dependency> <groupId>org.apache.openejb</groupId> <artifactId>openejb-core</artifactId> 
			<version>4.6.0</version> </dependency -->

		<dependency>
			<groupId>org.eclipse.birt.runtime</groupId>
			<artifactId>org.eclipse.emf.ecore</artifactId>
			<version>2.8.3.v20130125-0546</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.birt.runtime</groupId>
			<artifactId>org.eclipse.emf.common</artifactId>
			<version>2.8.0.v20130125-0546</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.birt.runtime</groupId>
			<artifactId>org.eclipse.emf.ecore.xmi</artifactId>
			<version>2.8.1.v20130125-0546</version>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.2.8</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.1.0.Final</version>
		</dependency>
		
		
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-c3p0</artifactId>
    		<version>4.1.10.Final</version>
  		</dependency>
		
		
		
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.teneo.hibernate</artifactId>
			<version>2.0.1-v201211251032</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.teneo</artifactId>
			<version>2.0.1-v201310012125</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.teneo.hibernate.mapper</artifactId>
			<version>2.0.1-v201310012125</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.teneo.annotations</artifactId>
			<version>2.0.1-v201310012125</version>
		</dependency>
		
		<!--dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency-->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.3-1102-jdbc41</version>
		</dependency>
		
		<!--dependency> <groupId>org.apache.wookie</groupId> <artifactId>wookie</artifactId> 
			<version>0.15.0</version> </dependency -->
		<!--dependency> <groupId>org.apache.wookie</groupId> <artifactId>wookie</artifactId> 
			<version>0.14</version> </dependency -->
		<!--dependency> <groupId>org.apache.wookie</groupId> <artifactId>wookie</artifactId> 
			<version>0.13.1</version> </dependency -->

		<dependency>
			<groupId>org.apache.wookie</groupId>
			<artifactId>wookie-java-connector</artifactId>
			<version>0.15.0</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.18</version>
		</dependency>
		
		<!--dependency>
		    <groupId>org.glassfish.jersey.containers</groupId>
		    <artifactId>jersey-container-servlet</artifactId>
		    <version>2.12</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.core</groupId>
		    <artifactId>jersey-client</artifactId>
		    <version>2.12</version>
		    <scope>provided</scope>
		</dependency-->
		
		<!--dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.12</version>
		</dependency-->
		
		<!--dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-client</artifactId>
		    <version>3.0.2.Final</version>
		</dependency-->
		

	   <!--dependency>
	      <groupId>org.jboss.resteasy</groupId>
	       <artifactId>resteasy-jaxrs</artifactId>
	      <version>3.0.2.Final</version>
	   </dependency>

		  <dependency>
		    <groupId>org.jboss.resteasy</groupId>
		      <artifactId>resteasy-jaxb-provider</artifactId>
		    <version>3.0.2.Final</version>
		  </dependency>
		  <dependency>
		      <groupId>org.jboss.resteasy</groupId>
		      <artifactId>jaxrs-api</artifactId>
		      <version>3.0.2.Final</version>
		  </dependency>
		  <dependency>
		      <groupId>org.jboss.resteasy</groupId>
		      <artifactId>resteasy-client</artifactId>
		      <version>3.0.2.Final</version>
		  </dependency-->


		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.2</version>
		</dependency>

		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.11.0</version>
		</dependency>
		
		<!--dependency>
		  	<groupId>soa-model</groupId>
		  	<artifactId>soa-model-core</artifactId>
		  	<version>1.4.1.4</version>
		</dependency-->
		
		<!--dependency>
		  	<groupId>soa-model</groupId>
		  	<artifactId>soa-model-core</artifactId>
		  	<version>1.4.1.4</version>
		  	<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/soa-model-core-1.4.1.4.jar</systemPath>
		  	<scope>system</scope>
		</dependency-->
		
		<!--dependency>
		  	<groupId>soa-model</groupId>
		  	<artifactId>soa-model-distribution</artifactId>
		  	<version>1.4.1.4</version>
		  	<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/soa-model-distribution-1.4.1.4.jar</systemPath>
		  	<scope>system</scope>
		</dependency-->
		
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.2.2</version>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.30</version>
		</dependency>
		
		<dependency>
    		<groupId> org.apache.cassandra</groupId>
    		<artifactId>cassandra-all</artifactId>
    		<version>0.8.1</version>

    		<exclusions>
    			<exclusion> 
        			<groupId>org.slf4j</groupId>
        			<artifactId>slf4j-log4j12</artifactId>
      			</exclusion>
      			<exclusion> 
        			<groupId>log4j</groupId>
        			<artifactId>log4j</artifactId>
      			</exclusion>
    		</exclusions> 

  </dependency>
		
	</dependencies>
	
	

	<build>
		<!-- Set the name of the war, used as the context root when the app is 
			deployed -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- JBoss AS plugin to deploy war -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
 				<artifactId>wildfly-maven-plugin</artifactId>
                <version>1.0.2.Final</version>
			</plugin>
			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			
			<!--plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-install-plugin</artifactId>
			    <version>2.4</version>
			    <executions>
			        <execution>
			            <phase>initialize</phase>
			            <goals>
			                <goal>install-file</goal>
			            </goals>
			            <configuration>
			                <groupId>soa-model</groupId>
			                <artifactId>soa-model-core</artifactId>
			                <version>1.4.1.4</version>
			                <packaging>jar</packaging>
			                <file>${project.basedir}/src/main/webapp/WEB-INF/lib/soa-model-core-1.4.1.4.jar</file>
			            </configuration>
			        </execution>
			    </executions>
			</plugin-->
			
			
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>${version.war.plugin}</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
							<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
					
					<!--plugin>
					    <groupId>org.apache.maven.plugins</groupId>
					    <artifactId>maven-install-plugin</artifactId>
					    <version>2.4</version>
					    <executions>
					        <execution>
					            <phase>initialize</phase>
					            <goals>
					                <goal>install-file</goal>
					            </goals>
					            <configuration>
					                <groupId>soa-model</groupId>
					                <artifactId>soa-model-core</artifactId>
					                <version>1.4.1.4</version>
					                <packaging>jar</packaging>
					                <file>${project.basedir}/src/main/webapp/WEB-INF/lib/soa-model-core-1.4.1.4.jar</file>
					            </configuration>
					        </execution>
					    </executions>
					</plugin-->
					
				</plugins>
			</build>
		</profile>
	</profiles>
	
</project>

